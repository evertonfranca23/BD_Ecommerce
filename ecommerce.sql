-- MySQL Script generated by MySQL Workbench
-- Tue Nov  1 12:41:21 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema E-commerce
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `E-commerce` ;

-- -----------------------------------------------------
-- Schema E-commerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `E-commerce` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `E-commerce` ;

-- -----------------------------------------------------
-- Table `E-commerce`.`Cliente - PF`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Cliente - PF` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Cliente - PF` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `Pnome` VARCHAR(10) NOT NULL,
  `NmeioInicial` CHAR(1) NOT NULL,
  `Sobrenome` VARCHAR(45) NOT NULL,
  `CPF` CHAR(11) NOT NULL,
  `endereço` VARCHAR(45) NOT NULL,
  `Data de nascimento` DATETIME NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `CPF_UNIQUE` ON `E-commerce`.`Cliente - PF` (`CPF` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Cliente - PJ`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Cliente - PJ` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Cliente - PJ` (
  `idContaPJ` INT NOT NULL AUTO_INCREMENT,
  `NomeFantasia` VARCHAR(45) NOT NULL,
  `CNPJ` VARCHAR(15) NOT NULL,
  `Endereço comercial` VARCHAR(45) NOT NULL,
  `Contato` VARCHAR(11) NOT NULL,
  `Razão Social` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idContaPJ`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `CNPJ_UNIQUE` ON `E-commerce`.`Cliente - PJ` (`CNPJ` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Entrega`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Entrega` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Entrega` (
  `idEntrega` INT NOT NULL AUTO_INCREMENT,
  `Prazo` DATETIME NOT NULL,
  `Rastreamento` VARCHAR(45) NOT NULL,
  `Pedido_idPedido` INT NOT NULL,
  PRIMARY KEY (`idEntrega`, `Pedido_idPedido`),
  CONSTRAINT `fk_Entrega_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `E-commerce`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Entrega_Pedido1_idx` ON `E-commerce`.`Entrega` (`Pedido_idPedido` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Estoque` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Estoque` (
  `idEstoque` INT NOT NULL AUTO_INCREMENT,
  `Local` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEstoque`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Fornecedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Fornecedor` (
  `idFornecedor` INT NOT NULL,
  `Razão Social` VARCHAR(45) NOT NULL,
  `CNPJ` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idFornecedor`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Fornecedor por Produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Fornecedor por Produto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Fornecedor por Produto` (
  `Fornecedor_idFornecedor` INT NOT NULL,
  `Produto_idProduto` INT NOT NULL,
  PRIMARY KEY (`Fornecedor_idFornecedor`, `Produto_idProduto`),
  CONSTRAINT `fk_Fornecedor_has_Produto_Fornecedor`
    FOREIGN KEY (`Fornecedor_idFornecedor`)
    REFERENCES `E-commerce`.`Fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fornecedor_has_Produto_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `E-commerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Fornecedor_has_Produto_Produto1_idx` ON `E-commerce`.`Fornecedor por Produto` (`Produto_idProduto` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Fornecedor_has_Produto_Fornecedor_idx` ON `E-commerce`.`Fornecedor por Produto` (`Fornecedor_idFornecedor` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Pagamento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Pagamento` (
  `idPagamento` INT NOT NULL AUTO_INCREMENT,
  `Credito` FLOAT NOT NULL,
  `Débito` FLOAT NOT NULL,
  `PIX` FLOAT NOT NULL,
  `Cliente_idCliente` INT NOT NULL,
  `Conta - PJ_idContaPJ` INT NOT NULL,
  `TipoPagamento` ENUM('Credito', 'Debito', 'PIX') NULL DEFAULT 'forma de pagamento',
  PRIMARY KEY (`idPagamento`, `Cliente_idCliente`, `Conta - PJ_idContaPJ`),
  CONSTRAINT `fk_Pagamento_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `E-commerce`.`Cliente - PF` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagamento_Conta - PJ1`
    FOREIGN KEY (`Conta - PJ_idContaPJ`)
    REFERENCES `E-commerce`.`Cliente - PJ` (`idContaPJ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Pagamento_Cliente1_idx` ON `E-commerce`.`Pagamento` (`Cliente_idCliente` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Pagamento_Conta - PJ1_idx` ON `E-commerce`.`Pagamento` (`Conta - PJ_idContaPJ` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Pagamento por Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Pagamento por Pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Pagamento por Pedido` (
  `Pagamento_idPagamento` INT NOT NULL,
  `Pagamento_Cliente_idCliente` INT NOT NULL,
  `Pagamento_Conta - PJ_idContaPJ` INT NOT NULL,
  `Pedido_idPedido` INT NOT NULL,
  `Status` ENUM('Aguardando Pagamento', 'Pago') NULL DEFAULT 'Aguardando Pagamento',
  PRIMARY KEY (`Pagamento_idPagamento`, `Pagamento_Cliente_idCliente`, `Pagamento_Conta - PJ_idContaPJ`, `Pedido_idPedido`),
  CONSTRAINT `fk_Pagamento_has_Pedido_Pagamento1`
    FOREIGN KEY (`Pagamento_idPagamento` , `Pagamento_Cliente_idCliente` , `Pagamento_Conta - PJ_idContaPJ`)
    REFERENCES `E-commerce`.`Pagamento` (`idPagamento` , `Cliente_idCliente` , `Conta - PJ_idContaPJ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagamento_has_Pedido_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `E-commerce`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Pagamento_has_Pedido_Pedido1_idx` ON `E-commerce`.`Pagamento por Pedido` (`Pedido_idPedido` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Pagamento_has_Pedido_Pagamento1_idx` ON `E-commerce`.`Pagamento por Pedido` (`Pagamento_idPagamento` ASC, `Pagamento_Cliente_idCliente` ASC, `Pagamento_Conta - PJ_idContaPJ` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Pedido` (
  `idPedido` INT NOT NULL AUTO_INCREMENT,
  `Status do pedido` ENUM('Cancelado', 'Confirmado', 'Em Processamento') NOT NULL DEFAULT 'Processando',
  `Descrição` VARCHAR(255) NOT NULL,
  `Data` DATETIME NOT NULL,
  `Valor_Frete` FLOAT NOT NULL,
  PRIMARY KEY (`idPedido`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Produto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Produto` (
  `idProduto` INT NOT NULL AUTO_INCREMENT,
  `Categoria` ENUM('Eletrônico', 'Vestimento', 'Brinquedos', 'Alimentos') NOT NULL,
  `Descrição` VARCHAR(45) NOT NULL,
  `Valor` VARCHAR(45) NOT NULL,
  `Avaliação` FLOAT NULL DEFAULT 0,
  `Tamanho` VARCHAR(10) NULL,
  PRIMARY KEY (`idProduto`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Produto por Estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Produto por Estoque` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Produto por Estoque` (
  `Produto_idProduto` INT NOT NULL,
  `Estoque_idEstoque` INT NOT NULL,
  `Quantidade` INT NOT NULL,
  `Status` ENUM('Tem no estoque', 'Estoque vazio') NULL DEFAULT 'Reponha o estoque',
  PRIMARY KEY (`Produto_idProduto`, `Estoque_idEstoque`),
  CONSTRAINT `fk_Produto_has_Estoque_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `E-commerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Estoque_Estoque1`
    FOREIGN KEY (`Estoque_idEstoque`)
    REFERENCES `E-commerce`.`Estoque` (`idEstoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Produto_has_Estoque_Estoque1_idx` ON `E-commerce`.`Produto por Estoque` (`Estoque_idEstoque` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Produto_has_Estoque_Produto1_idx` ON `E-commerce`.`Produto por Estoque` (`Produto_idProduto` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Produto por Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Produto por Pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Produto por Pedido` (
  `Produto_idProduto` INT NOT NULL AUTO_INCREMENT,
  `Pedido_idPedido` INT NOT NULL,
  `Quantidade` VARCHAR(45) NOT NULL,
  `Status` ENUM('Disponivel', 'Em estoque') NULL DEFAULT 'Disponivel',
  PRIMARY KEY (`Produto_idProduto`, `Pedido_idPedido`),
  CONSTRAINT `fk_Produto_has_Pedido_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `E-commerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Produto_has_Pedido_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `E-commerce`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Produto_has_Pedido_Pedido1_idx` ON `E-commerce`.`Produto por Pedido` (`Pedido_idPedido` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Produto_has_Pedido_Produto1_idx` ON `E-commerce`.`Produto por Pedido` (`Produto_idProduto` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Produtos por Fornecedor(terceiro)`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Produtos por Fornecedor(terceiro)` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Produtos por Fornecedor(terceiro)` (
  `Terceiro - Vendedor_idTerceiro - Vendedor` INT NOT NULL,
  `Produto_idProduto` INT NOT NULL,
  `Quantidade` INT NOT NULL,
  PRIMARY KEY (`Terceiro - Vendedor_idTerceiro - Vendedor`, `Produto_idProduto`),
  CONSTRAINT `fk_Terceiro - Vendedor_has_Produto_Terceiro - Vendedor1`
    FOREIGN KEY (`Terceiro - Vendedor_idTerceiro - Vendedor`)
    REFERENCES `E-commerce`.`Terceiro - Fornecedor` (`idTerceiro - Vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Terceiro - Vendedor_has_Produto_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `E-commerce`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Terceiro - Vendedor_has_Produto_Produto1_idx` ON `E-commerce`.`Produtos por Fornecedor(terceiro)` (`Produto_idProduto` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Terceiro - Vendedor_has_Produto_Terceiro - Vendedor1_idx` ON `E-commerce`.`Produtos por Fornecedor(terceiro)` (`Terceiro - Vendedor_idTerceiro - Vendedor` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Reembolso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Reembolso` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Reembolso` (
  `idReembolso` INT NOT NULL AUTO_INCREMENT,
  `Estorno` FLOAT NOT NULL,
  `Conta Bancaria` FLOAT NOT NULL,
  `Pagamento_idPagamento` INT NOT NULL,
  `Pagamento_Cliente_idCliente` FLOAT NOT NULL,
  `Pagamento_Conta - PJ_idContaPJ` FLOAT NOT NULL,
  PRIMARY KEY (`idReembolso`, `Pagamento_idPagamento`, `Pagamento_Cliente_idCliente`, `Pagamento_Conta - PJ_idContaPJ`),
  CONSTRAINT `fk_Reembolso_Pagamento1`
    FOREIGN KEY (`Pagamento_idPagamento` , `Pagamento_Cliente_idCliente` , `Pagamento_Conta - PJ_idContaPJ`)
    REFERENCES `E-commerce`.`Pagamento` (`idPagamento` , `Cliente_idCliente` , `Conta - PJ_idContaPJ`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Reembolso_Pagamento1_idx` ON `E-commerce`.`Reembolso` (`Pagamento_idPagamento` ASC, `Pagamento_Cliente_idCliente` ASC, `Pagamento_Conta - PJ_idContaPJ` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `E-commerce`.`Terceiro - Fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `E-commerce`.`Terceiro - Fornecedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `E-commerce`.`Terceiro - Fornecedor` (
  `idTerceiro - Vendedor` INT NOT NULL AUTO_INCREMENT,
  `Razão Social` VARCHAR(45) NOT NULL,
  `Local` VARCHAR(45) NOT NULL,
  `NomeFantasia` VARCHAR(15) NOT NULL,
  `CNPJ` VARCHAR(45) NOT NULL,
  `Contato` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`idTerceiro - Vendedor`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `Razão Social_UNIQUE` ON `E-commerce`.`Terceiro - Fornecedor` (`Razão Social` ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX `CNPJ_UNIQUE` ON `E-commerce`.`Terceiro - Fornecedor` (`CNPJ` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
